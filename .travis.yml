dist: bionic
language: python

install:
# Install libvrt & KVM
- sudo apt-get update && sudo apt-get install -y bridge-utils dnsmasq-base ebtables libvirt-bin libvirt-dev qemu-kvm qemu-utils ruby-dev

# Download Vagrant & Install Vagrant package
- sudo wget -nv https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.deb
- sudo dpkg -i vagrant_2.2.7_x86_64.deb

# Vagrant correctly installed?
- vagrant --version

# Install vagrant-libvirt Vagrant plugin
- sudo vagrant plugin install vagrant-libvirt

script:
- sudo vagrant init
- sudo vagrant up --provider=libvirt
- sudo vagrant ssh -c "echo 'hello world!'"


#Тут указывается используемый в проекте язык программирования, можно указать несколько
#language: python

#Далее, укажите версии python для которых нужно производить сборки
#python:
  #- "3.7"
  
#dist: bionic
  
#stage:
  #- build
  #- execution

#install:
#Install libvrt & KVM (see https://github.com/alvistack/ansible-role-virtualbox/blob/master/.travis.yml)
#- sudo apt-get update && sudo apt-get install -y bridge-utils
#- sudo apt-get build-dep vagrant ruby-libvirt
#- sudo apt-get install qemu libvirt-bin ebtables dnsmasq-base
#- sudo apt-get install libxslt-dev libxml2-dev libvirt-dev zlib1g-dev ruby-dev

#Download Vagrant & Install Vagrant package
#- sudo wget -nv https://releases.hashicorp.com/vagrant/2.2.14/vagrant_2.2.14_x86_64.deb
#- sudo dpkg -i vagrant_2.2.14_x86_64.deb

#Vagrant correctly installed?
#- vagrant --version

#Install vagrant-libvirt Vagrant plugin
#- sudo vagrant plugin install vagrant-libvirt

#Setting up permissions
#- sudo chown -R $USER:$USER ~/.vagrant.d

#- sudo apt-get install virtualbox

#- sudo vagrant init
#- vagrant box add generic/ubuntu1804 --provider=libvirt
#- vagrant up --provider virtualbox
#- sudo vagrant up
#- sudo vagrant ssh -c "ls"

#- sudo apt-get update && sudo apt-get install -y bridge-utils bridge-utils ebtables dnsmasq-base ruby-dev
#- sudo apt-get install virtualbox -y
#- sudo apt-get install vagrant -y
#- vagrant init ubuntu/xenial64
#- vagrant ssh -c "ls"


#jobs:
  #include:
    #- stage: build
      #name: general
      #env:
        #- DJANGO_VERSION=2.2.7
      #install:
        #- pip install -q Django==$DJANGO_VERSION
        #- pip install -r requirements.txt
      #script:
        #- vagrant --version
        #- ls -la
    
    #- stage: execution
      #name: test1
      #script: 
        #- bundle install
        #- pip freeze
        #- ls
      
    #- name: test2
      #script:
        #- bundle install
        #- pip freeze
        #- ls
        #- python project/manage.py test
